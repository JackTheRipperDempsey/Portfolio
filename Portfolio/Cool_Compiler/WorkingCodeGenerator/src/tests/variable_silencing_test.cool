

class Main inherits IO {
    var : Int := 0;
    varString: String := "Class attribute";
    caseVar: Int := 0;

    testMethod(var : Int, varString : String) : SELF_TYPE {
        {
            out_string("\ninside method call - method arguments\n");

            out_string("var: ");
            out_int(var);
            out_string("\n");

            out_string("varString: ");
            out_string(varString);
            out_string("\n");

            caseVar <- case var of
                varString : Int => {out_string("- inside the case block -\n"); out_string("varString: "); out_int(varString); 18;};
                varString : Object => {out_string("- ERROR -\n");~1;};
            esac;

            out_string("\n\ncaseVar: ");
            out_int(caseVar);
            out_string("\n");
        }
    };

    main() : Main {
        {
	
            out_string("outermost context - class attributes\n");

            out_string("var: ");
            out_int(var);
            out_string("\n");

            out_string("varString: ");
            out_string(varString);
            out_string("\n");

            out_string("\nfirst let\n");
        
            (let varString : Int, 
            var : String in 
		        {
                    varString <- 5;
                    var <- "first let - local vars - variable type swap\n";

                    out_string("var: ");
                    out_string(var);

                    out_string("varString: ");
                    out_int(varString);
                    out_string("\n");

                    out_string("\nsecond let\n");

                    (let var : Int <- 16, 
                    varString : String <- "second, inner let - local vars - variable type swap back\n" in 
                        {
                            out_string("var: ");
                            out_int(var);

                            out_string("\nvarString: ");
                            out_string(varString);
                            out_string("\n");

                            testMethod(25, "inside method call - variables changed\n");
                        }
	                );
		        }
	        );

            out_string("end\n");

	    }
    };

};
