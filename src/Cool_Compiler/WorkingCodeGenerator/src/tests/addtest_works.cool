class Adder {
	
	var : Int <- 0;
	value() : Int { var };

	set_var(num : Int) : SELF_TYPE {
		{
			var <- num;
			self;
		}

	};

	add2(num1 : Int, num2 : Int) : SELF_TYPE {

	(let x : Int in 
		{
			x <- num1 + num2;
			var <- x;
			self;
		}
	)
	};	
	
};

class Main inherits IO {

    number : Int := 0;
    n1 : Int <- 0;
    n2 : Int <- 1;
    flag : Bool := true;
    adder : Adder;

    main() : Main {
    {
		adder := new Adder;
        while flag do
        {

            flag := (if not (number <= 10) then false else true fi);
			out_string("current number: \n" );
			out_int(number);
			out_string("\n");
            adder.add2(n1,n2);
	    	number := adder.value();
			n1 := n2;
			n2 := number;
        }
        od;
        out_string("incrementing complete\n");
        }
    };

};
